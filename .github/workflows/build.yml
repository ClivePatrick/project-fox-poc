name: Build üîß

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"

permissions:
  contents: write
  pages: write
  id-token: write

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checksLicense:
    name: Check for Unity license ‚úîÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  buildWebGL:
    needs: checksLicense
    name: Build WebGL üåê
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-WebGL
          restore-keys: |
            Library-WebGL
            Library-
            
      - name: Build into WebGL
        uses: game-ci/unity-builder@v2.2.0
        env:
          UNITY_LICENSE: ${{ env.UNITY_LICENSE }}
        with:
          unityVersion: 2021.3.21f1
          targetPlatform: WebGL

      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  buildWindows:
    needs: checksLicense
    name: Build Windows and Mac üñ•Ô∏è
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key:
            Library-StandaloneWindows64
          restore-keys: |
            Library-StandaloneWindows64
            Library-
            
      - name: Build into Windows
        uses: game-ci/unity-builder@v2.2.0
        env:
          UNITY_LICENSE: ${{ env.UNITY_LICENSE }}
        with:
          unityVersion: 2021.3.21f1
          targetPlatform: StandaloneWindows64
      
      - name: Upload StandaloneWindows64 Build
        uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64-${{ github.sha }}
          path: build/StandaloneWindows64

  buildMac:
    needs: checksLicense
    name: Build Windows and Mac üñ•Ô∏è
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key:
            Library-StandaloneOSX
          restore-keys: |
            Library-StandaloneOSX
            Library-
            
      - name: Build into Mac
        uses: game-ci/unity-builder@v2.2.0
        env:
          UNITY_LICENSE: ${{ env.UNITY_LICENSE }}
        with:
          unityVersion: 2021.3.21f1
          targetPlatform: StandaloneOSX
      
      - name: Upload StandaloneOSX Build
        uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneOSX-${{ github.sha }}
          path: build/StandaloneOSX

  uploadWebGL:
    needs: buildWebGL
    name: Upload WebGL to GitHub Pages üö¢
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: build-webgl
          folder: build/WebGL

  prepareWebGLForDeploy:
    needs: uploadWebGL
    name: Prepare GH Pages for deployment üîß
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: build-webgl

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: .
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  deploy:
    needs: prepareWebGLForDeploy
    name: Deploy build üöÄ
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  notifyWebSuccess:
    needs: deploy
    name: Notify Web Success üì¢
    runs-on: ubuntu-latest
    steps:
      - name: Get Workflow Conclusion
        uses: technote-space/workflow-conclusion-action@v2

      - name: Notify Success
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }} #${{ github.run_number }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/894758305690452039/success_kid.png"
          title: "‚úÖ Deployment status: SUCCESS!"
          description: "üåê [Visit the site](https://wearebrian.github.io/project-fox-poc/)."
          include-details: "false"
          color-success: "#2eb886"

  notifyDownloadableSuccess:
    needs: [buildWindows, buildMac]
    name: Notify Downloadable Sucess üì¢
    runs-on: ubuntu-latest
    steps:
      - name: Get Workflow Conclusion
        uses: technote-space/workflow-conclusion-action@v2

      - name: Notify Success
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }} #${{ github.run_number }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/1104388119744233512/4a5001b7beea096457f480c8808572428b-09-roll-safe.rsquare.w700.webp"
          title: "‚úÖ Deployment status: SUCCESS!"
          description: "üñ•Ô∏è [Download Windows & Mac build](https://github.com/WeAreBrian/project-fox-poc/actions/runs/${{ github.run_id }})"
          include-details: "false"
          color-success: "#2eb886"

  notifyFailure:
    name: Notify Failure üì¢
    needs: [buildDownloadableVersion, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }} #${{ github.run_number }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/1104388925256106045/this-is-fine_sq-0bd6d8072e991dc4708be3668cd480ae7df18a11-s800-c85.jpg"
          title: "‚ùå Deployment status: FAILED . . ."
          include-details: "true"
          color-failure: "#a30200"

      # - name: Notify Cancelled
      #   if: env.WORKFLOW_CONCLUSION == 'cancelled'
      #   uses: nobrayner/discord-webhook@v1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     discord-webhook: ${{ secrets.WEBHOOK_URL }}
      #     username: "${{ github.workflow }} #${{ github.run_number }}"
      #     avatar-url: "https://media.discordapp.net/attachments/821500555696013343/925737666685837353/Blank-Nut-Button.png"
      #     title: "‚ö†Ô∏è Deployment status: CANCELLED . . ."
      #     description: "Click the link above to view details on GitHub."
      #     include-details: "false"
      #     color-cancelled: "#ffd513"
