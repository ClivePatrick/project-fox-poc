name: Build üîß

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"

permissions:
  contents: write
  pages: write
  id-token: write

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:

  ###########################
  # Check for Unity license #
  ###########################

  checksLicense:
    name: Check for Unity license ‚úîÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  ###########################
  #   Build WebGL and PCs   #
  ###########################

  buildWebGL:
    needs: checksLicense
    name: Build WebGL üåê
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-WebGL
          restore-keys: Library-
            
      - name: Build into WebGL
        uses: game-ci/unity-builder@v2.2.0
        env:
          UNITY_LICENSE: ${{ env.UNITY_LICENSE }}
        with:
          unityVersion: auto
          targetPlatform: WebGL

      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  buildDownloadables:
    needs: checksLicense
    name: Build ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows64
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: auto
          targetPlatform: ${{ matrix.targetPlatform }}
          
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ github.run_number }}
          path: build/${{ matrix.targetPlatform }}

  ###########################
  #  Deploy to GitHub Pages #
  ###########################

  deployWebGL:
    needs: buildWebGL
    name: Deploy WebGL to GitHub Pages üö¢
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: build-webgl
          folder: build/WebGL

      - name: Checkout WebGL Branch
        uses: actions/checkout@v3
        with:
          ref: build-webgl

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: .
          destination: ./_site

      - name: Upload artifact for GitHub Pages Deploy
        uses: actions/upload-pages-artifact@v1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  ###########################
  #  Notify Workflow Result #
  ###########################

  notifyStatus:
    needs: [deployWebGL, buildDownloadables]
    name: Notify Status to Discord üì¢
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v3

      - name: Notify Success
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }} #${{ github.run_number }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/894758305690452039/success_kid.png"
          title: "‚úÖ Deployment status: SUCCESS!"
          description: |
            üåê [Visit the site](https://wearebrian.github.io/project-fox-poc/)
            üñ•Ô∏è [Download Windows & Mac build](https://github.com/WeAreBrian/project-fox-poc/actions/runs/${{ github.run_id }})
          include-details: "false"
          color-success: "#2eb886"

      - name: Notify Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }} #${{ github.run_number }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/1104388925256106045/this-is-fine_sq-0bd6d8072e991dc4708be3668cd480ae7df18a11-s800-c85.jpg"
          title: "‚ùå Deployment status: FAILED . . ."
          include-details: "true"
          color-failure: "#a30200"

      - name: Notify Cancelled
        if: env.WORKFLOW_CONCLUSION == 'cancelled'
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }} #${{ github.run_number }}"
          avatar-url: "https://media.discordapp.net/attachments/821500555696013343/925737666685837353/Blank-Nut-Button.png"
          title: "‚ö†Ô∏è Deployment status: CANCELLED . . ."
          description: ""
          include-details: "false"
          color-cancelled: "#ffd513"

  ###########################
  #    Link Build to PR     #
  ###########################
  
  linkToPr:
    needs: notifyStatus
    name: Link to PR üîó
    runs-on: ubuntu-latest
    steps:
      - name: Link to PR üîó
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context, github } = require('@actions/github');
            const { owner, repo } = context.repo;
            const pullRequestNumber = context.payload.pull_request.number;

            github.issues.createComment({
              owner,
              repo,
              issue_number: pullRequestNumber,
              body: `Link to build: https://github.com/WeAreBrian/project-fox-poc/actions/runs/${{ github.run_id }}`
            });